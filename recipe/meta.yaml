{% set name = "sqlalchemy" %}
{% set version = "2.0.40" %}
{% set python_min = "3.9" %}

package:
  name: sqlalchemy
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: d827099289c64589418ebbcaead0145cd19f4e3e8a93919a0100247af245fa00

build:
  number: 0

requirements:
  host:
    - python
    - setuptools >=61.0
    - cython >=0.29.24
    - pip
  run:
    - python

outputs:
  - name: {{ name }}
    script: install_sqlalchemy.sh
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cython >=0.29.24                       # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
      host:
        - python
        - setuptools >=61.0
        - cython >=0.29.24
        - pip
      run:
        - python
        - greenlet !=0.4.17
        - typing-extensions >=4.6.0

    test:
      requires:
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-asyncio
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - greenlet !=0.4.17
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  # types-greenlet not available on conda-forge
  #
  # - name: {{ name }}-with-mypy
  #   build:
  #     noarch: python
  #     # noarch so just build it once
  #     skip: true  # [not linux64 or py!=39]
  #   requirements:
  #     host:
  #       - python {{ python_min }}
  #     run:
  #       - python >={{ python_min }}
  #       - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
  #       - mypy >=1.7
  #       - types-greenlet >=2
  #   test:
  #     requires:
  #       - python {{ python_min }}
  #       - pip
  #     imports:
  #       - sqlalchemy
  #     commands:
  #       - pip check

  - name: {{ name }}-with-mssql
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - pyodbc
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-mssql-pymssql
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - pymssql
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-mssql-pyodbc
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - pyodbc
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:

        - pip check

  - name: {{ name }}-with-mysql
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - mysqlclient >=1.4.0
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-mysql-connector
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - mysql-connector-python
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-mariadb-connector
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - mariadb >=1.0.1,!=1.1.2,!=1.1.5,!=1.1.10
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-oracle
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - cx_oracle >=8
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-oracle-oracledb
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - oracledb >=1.0.1
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-postgresql
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - psycopg2 >=2.7
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-postgresql-pg8000
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - pg8000 >=1.29.3
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-postgresql-asyncpg
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - {{ name }}-with-asyncio
        - asyncpg
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-postgresql-psycopg2binary
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - psycopg2-binary
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  # psycopg2cffi not available on conda-forge
  #
  # - name: {{ name }}-with-postgresql-psycopg2cffi
  #   build:
  #     noarch: python
  #     # noarch so just build it once
  #     skip: true  # [not linux64 or py!=39]
  #   requirements:
  #     host:
  #       - python {{ python_min }}
  #     run:
  #       - python >={{ python_min }}
  #       - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
  #       - psycopg2cffi
  #   test:
  #     requires:
  #       - python {{ python_min }}
  #       - pip
  #     imports:
  #       - sqlalchemy
  #     commands:
  #       - pip check

  - name: {{ name }}-with-postgresql-psycopg
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - psycopg >=3.0.7,!=3.1.15
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-postgresql-psycopgbinary
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        # psycopg-binary doesn't exist (or make sense, since psycopg is also
        # binary) on conda-forge
        - {{ name }}-with-postgresql-psycopg
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-pymysql
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - pymysql
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  - name: {{ name }}-with-aiomysql
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - {{ name }}-with-asyncio
        - aiomysql

    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  # aioodbc not available on conda-forge
  #
  # - name: {{ name }}-with-aioodbc
  #   build:
  #     noarch: python
  #     # noarch so just build it once
  #     skip: true  # [not linux64 or py!=39]
  #   requirements:
  #     host:
  #       - python {{ python_min }}
  #     run:
  #       - python >={{ python_min }}
  #       - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
  #       - {{ name }}-with-asyncio
  #       - aioodbc
  #   test:
  #     requires:
  #       - python {{ python_min }}
  #       - pip
  #     imports:
  #       - sqlalchemy
  #     commands:
  #       - pip check

  # asyncmy not available on conda-forge
  #
  # - name: {{ name }}-with-asyncmy
  #   build:
  #     noarch: python
  #     # noarch so just build it once
  #     skip: true  # [not linux64 or py!=39]
  #   requirements:
  #     host:
  #       - python {{ python_min }}
  #     run:
  #       - python >={{ python_min }}
  #       - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
  #       - {{ name }}-with-asyncio
  #       - asyncmy >=0.2.3,!=0.2.4,!=0.2.6
  #   test:
  #     requires:
  #       - python {{ python_min }}
  #       - pip
  #     imports:
  #       - sqlalchemy
  #     commands:
  #       - pip check

  - name: {{ name }}-with-aiosqlite
    build:
      noarch: python
      # noarch so just build it once
      skip: true  # [not linux64 or py!=39]
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - {{ name }}-with-asyncio
        - aiosqlite
    test:
      requires:
        - python {{ python_min }}
        - pip
      imports:
        - sqlalchemy
      commands:
        - pip check

  # sqlcipher3_binary not available on conda-forge
  #
  # - name: {{ name }}-with-sqlcipher
  #   build:
  #     noarch: python
  #     # noarch so just build it once
  #     skip: true  # [not linux64 or py!=39]
  #   requirements:
  #     host:
  #       - python {{ python_min }}
  #     run:
  #       - python >={{ python_min }}
  #       - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
  #       - sqlcipher3_binary
  #   test:
  #     requires:
  #       - python {{ python_min }}
  #       - pip
  #     imports:
  #       - sqlalchemy
  #     commands:
  #       - pip check

about:
  home: https://www.sqlalchemy.org/
  license: MIT
  license_file: LICENSE
  summary: Database Abstraction Library.
  description: |
    SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that
    gives application developers the full power and flexibility of SQL.
  doc_url: https://docs.sqlalchemy.org/
  dev_url: https://github.com/sqlalchemy/sqlalchemy
  doc_source_url: https://github.com/zzzeek/sqlalchemy/blob/master/doc/build/index.rst

extra:
  recipe-maintainers:
    - xylar
    - ocefpaf
    - nehaljwani
    - igortg
